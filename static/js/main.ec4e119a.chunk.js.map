{"version":3,"sources":["App.js","index.js"],"names":["Task","props","state","isEdit","value","onClickRemove","bind","onClickDone","onDoubleClickEdit","handleChange","onBlur","onKeyDown","id","this","removeTask","parseInt","taskDone","item","text","setState","trim","editTask","event","target","key","style","done","div","Fragment","className","type","checked","onClick","input","autoFocus","onChange","onFocus","block","onDoubleClick","React","Component","TasksList","currentTasks","onClickRemoveDone","onClickShowDone","onClickShowUndone","onClickShowAll","removeDone","tasks","tasksDone","filter","doneTasksCount","length","undoneTasksCount","clearDoneStyle","counterWord","map","NewTaskForm","allDone","handleSubmit","onClickDoneAll","addTask","preventDefault","some","allTasksDone","selectorStyle","onSubmit","placeholder","ToDoApp","counter","storageTasks","localStorage","getItem","JSON","parse","task","push","slice","setItem","stringify","taskId","find","forEach","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec4e119a.chunk.js","sourcesContent":["import React from 'react';\nimport './styles.css';\n\n\nexport class Task extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEdit: false,\n            value: \"\",\n        }\n        this.onClickRemove = this.onClickRemove.bind(this);\n        this.onClickDone = this.onClickDone.bind(this);\n        this.onDoubleClickEdit = this.onDoubleClickEdit.bind(this);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n\n    }\n\n    onClickRemove() {\n        let id = this.props.id;\n        this.props.removeTask(id);\n    }\n\n    onClickDone() {\n        let id = parseInt(this.props.id);\n        this.props.taskDone(id);\n    }\n\n    onDoubleClickEdit() {\n        let value = this.props.item.text;\n        this.setState({value: value, isEdit: true});\n    }\n\n    onBlur() {\n        let text = this.state.value.trim();\n        if (text) {\n            this.props.editTask(this.props.item.id, text);\n            this.setState({value: '', isEdit: false});\n        } else {\n            let id = this.props.item.id;\n            this.props.removeTask(id);\n            this.setState({value: '', isEdit: false});\n        }\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    onKeyDown(event) {\n        switch (event.key) {\n            case \"Enter\":\n                let text = this.state.value.trim();\n                if (text) {\n                    this.props.editTask(this.props.item.id, text);\n                    this.setState({value: '', isEdit: false});\n                } else {\n                    let id = this.props.item.id;\n                    this.props.removeTask(id);\n                    this.setState({value: '', isEdit: false});\n                }\n                break;\n            case \"Escape\":\n                this.setState({isEdit: false});\n                break;\n            default: return;\n        }\n    }\n\n    render() {\n        let style = this.props.item.done ? \"task__text_done\" : \"\";\n\n        let div = \n        <React.Fragment>\n            <div className=\"task__manage\">\n                <input type=\"checkbox\" checked={this.props.item.done} onClick={this.onClickDone} className=\"task__checkbox\"/>\n            </div>\n            <div className=\"task__body\" >\n                <p className={`task__text ${style}`}>{this.props.item.text}</p>\n            </div>\n            <div className=\"task__manage\">\n                <div className=\"task__remove\" onClick={this.onClickRemove}>×</div>\n            </div>\n        </React.Fragment>\n\n        let input = <React.Fragment>\n            <div className=\"task__manage\">      \n            </div>\n            <input className=\"task__edit\" autoFocus value={this.state.value} onKeyDown={this.onKeyDown} onChange = {this.handleChange}\n            onFocus={this.onFocus} onBlur={this.onBlur} />\n        </React.Fragment>\n\n        let block = this.state.isEdit ? input : div;\n\n        return(\n            <li className=\"to-do-list__item\" onDoubleClick={this.onDoubleClickEdit}>\n                    <div className=\"task\">\n                        {block}\n                    </div>\n                </li>\n        )\n    }\n}\n\nexport class TasksList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentTasks: \"all\",\n        };\n        this.onClickRemoveDone = this.onClickRemoveDone.bind(this);\n        this.onClickShowDone = this.onClickShowDone.bind(this);\n        this.onClickShowUndone = this.onClickShowUndone.bind(this);\n        this.onClickShowAll = this.onClickShowAll.bind(this);\n    }\n\n    onClickRemoveDone() {\n        this.props.removeDone();\n    }\n\n    onClickShowDone() {\n        this.setState({currentTasks:\"done\"});\n    }\n    onClickShowUndone() {\n        this.setState({currentTasks:\"undone\"});\n    }\n    onClickShowAll() {\n        this.setState({currentTasks:\"all\"});\n    }\n\n\n    render() {\n        let tasks = this.props.tasks;\n        let tasksDone = this.props.tasks.filter((item) => item.done === true);\n        \n        let doneTasksCount = tasksDone.length;\n        let undoneTasksCount = tasks.length - tasksDone.length;\n        \n        let clearDoneStyle = (doneTasksCount > 0) ? \"task-menu__clear\" : \"task-menu__clear_hidden\";\n        let counterWord = (tasks.length === 1) ? \" item\" : \" items\"\n        \n\n        switch (this.state.currentTasks) {\n            case \"all\":\n                tasks = tasks.map((item) => {\n                    return (\n                        <Task item = {item} id = {item.id} removeTask = {this.props.removeTask}\n                              taskDone = {this.props.taskDone} editTask = {this.props.editTask}/>\n                    )\n                });\n                break;\n            case \"done\":\n                tasks = tasksDone.map((item) => {\n                    return (\n                        <Task item = {item} id = {item.id} removeTask = {this.props.removeTask}\n                              taskDone = {this.props.taskDone} editTask = {this.props.editTask}/>\n                    )\n                });\n                break;\n            case \"undone\":\n                tasks = this.props.tasks.filter((item) => item.done === false).map((item) => {\n                    return (\n                        <Task item = {item} id = {item.id} removeTask = {this.props.removeTask}\n                              taskDone = {this.props.taskDone} editTask = {this.props.editTask}/>\n                    )\n                });\n                break;\n            default: return;\n        }\n\n        return (\n            <React.Fragment>\n                <ul className=\"task-list\">\n                {tasks}\n            </ul>\n            <div className=\"task-menu\">\n            <div className=\"task-menu__counter\">\n                <p> {undoneTasksCount + counterWord + \" left\"} </p>\n            </div>\n            <div className=\"task-menu__filter\">\n            <div className={(this.state.currentTasks === \"all\") ? \"task-menu__btn task-menu__btn_chosen\" : \"task-menu__btn\"} onClick={this.onClickShowAll}>All</div>\n            <div className={(this.state.currentTasks === \"undone\") ? \"task-menu__btn task-menu__btn_chosen\" : \"task-menu__btn\"}  onClick={this.onClickShowUndone}>Active</div>\n            <div className={(this.state.currentTasks === \"done\") ? \"task-menu__btn task-menu__btn_chosen\" : \"task-menu__btn\"}  onClick={this.onClickShowDone}>Completed</div>\n            </div>\n            <div className={clearDoneStyle}>\n                <div className=\"task-menu__btn-clear\" onClick={this.onClickRemoveDone}>Clear completed</div>\n            </div>\n        </div>\n            </React.Fragment>\n                  \n        );\n    }\n}\n\nexport class NewTaskForm extends React.Component { // Компонент доска\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n            allDone: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onClickDoneAll = this.onClickDoneAll.bind(this);\n    }\n\n    //Меняет состояние каждый раз при изменении input\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    //Вызываетcя при нажатии ENTER в input формы или по кнопке\n    handleSubmit(event) {\n        let text = this.state.value.trim();\n        if (text){\n            this.props.addTask(text);\n        }\n        this.setState({value: ''});\n        event.preventDefault(); // Предотвращение перезагрузки страницы при отправке формы\n    }\n\n    onClickDoneAll() {\n        let tasks = this.props.tasks;\n        if (tasks.length === 0) {\n            return ;\n        }\n\n        \n        if (tasks.some((item) => item.done === false)) {\n            this.props.allTasksDone(true);\n            this.setState({allDone: true});\n        } else {\n            this.props.allTasksDone(false);\n            this.setState({allDone: false});\n        }\n    }\n\n    render() {\n        let selectorStyle = (this.state.allDone && !this.props.tasks.some((item) => item.done === false) && this.props.tasks.length > 0) ? \"task-selector__btn task-selector__btn_chosen\" : \"task-selector__btn\";\n        return (\n            <form onSubmit = {this.handleSubmit} className=\"new-task\">\n                <div className=\"task-selector\">\n                    <p onClick={this.onClickDoneAll} className={selectorStyle}>❯</p>\n                </div>\n                <input placeholder=\"What needs to be done?\" \n                className=\"new-task__input\" autoFocus type=\"text\" onChange = {this.handleChange}\n                value={this.state.value}/>\n                <div className=\"new-task__controls\">\n                    <button className=\"new-task__btn\" id=\"new-task__btn\">Add</button>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport class ToDoApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [],\n            counter: -1,\n        }\n        // Установка контекста этого родительского компонента для того, чтобы вызывать эти методы через пропсы в дочках\n        this.addTask = this.addTask.bind(this);\n        this.removeTask = this.removeTask.bind(this);\n        this.taskDone = this.taskDone.bind(this);\n        this.editTask = this.editTask.bind(this);\n        this.removeDone = this.removeDone.bind(this);\n        this.allTasksDone = this.allTasksDone.bind(this);\n    }\n\n    componentDidMount() {\n        const storageTasks = localStorage.getItem(\"tasks\");\n        \n        if (storageTasks) {\n            const tasks = JSON.parse(storageTasks);\n            this.setState({tasks, counter: tasks.length});\n        }\n    };\n\n    // Добавление таска в массив. Передается в пропсе в NewTaskForm\n    addTask(task) {\n        let counter = this.state.counter + 1;\n        this.state.tasks.push(\n            {\n                id: counter,\n                text: task,\n                done: false,\n            }\n        )\n        let tasks = this.state.tasks.slice();\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n        this.setState({tasks: tasks, counter: counter});\n    }\n\n    // Удаление таска. Передается через TasksList в Task\n    removeTask(taskId){\n       let tasks = this.state.tasks.filter((item) => item.id !== taskId);\n       localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n       this.setState({tasks: tasks});\n    }\n\n    // Передается в TasksList\n    removeDone(){\n        let tasks = this.state.tasks.filter((item) => item.done !== true);\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n        this.setState({tasks: tasks});\n    }\n\n    // Передается через TasksList в Task\n    taskDone(taskId){\n        let task = this.state.tasks.find((item) => item.id === taskId)\n        task.done = !task.done;\n        let tasks = this.state.tasks.slice();\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n        this.setState({tasks: tasks});\n    }\n\n    // Передается в TasksList\n    allTasksDone(allDone) {\n        this.state.tasks.forEach((item) => item.done = allDone);\n        let tasks = this.state.tasks.slice();\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n        this.setState({tasks: tasks});\n    }\n\n    // Передается через TasksList в Task\n    editTask(taskId, text) {\n        let task = this.state.tasks.find((item) => item.id === taskId)\n        task.text = text;\n        let tasks = this.state.tasks.slice();\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n        this.setState({tasks: tasks});\n    }\n\n    // Функция отрисовки элементов\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <header className=\"header\">\n                        <h1 className=\"header__text\">todos</h1>\n                    </header>\n                <div className=\"to-do-app\">\n            <NewTaskForm tasks = {this.state.tasks} addTask = {this.addTask} allTasksDone = {this.allTasksDone}/>\n            <TasksList tasks = {this.state.tasks} removeTask = {this.removeTask} removeDone = {this.removeDone}\n                       taskDone = {this.taskDone} editTask = {this.editTask}/>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport {ToDoApp} from './App';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n    <ToDoApp />,\n    document.getElementById('root')\n);"],"sourceRoot":""}